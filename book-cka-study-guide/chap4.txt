chap 4 scheduling and tooling

	k run rate-limiter --image=bmuschko/nodejs-business-app:1.0.0 --dry-run=client -o yaml

// ch4-reate-limiter.yaml
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: rate-limiter5
  name: rate-limiter5
spec:
  containers:
  - name: rate-limiter5
    image: bmuschko/nodejs-business-app:1.0.0
    ports:
    - containerPort: 8080
    resources:
      requests:
        memory: "512Mi"
        cpu: "3"
      limits:
        memory: "1G"
        cpu: "4"

	k run rate-limiter --image=bmuschko/nodejs-business-app:1.0.0

	k get nodes

	k describe node minikube-m03

managing objects

creating objects

	// files
	.
		app-stack/
			mysql-pod.yaml
			mysql-service.yaml
			web-web-pod.yaml
			web-web-service.yaml
		nginx-deployment.yaml
		web-app/
			config/
				db-configmap.yaml
				db-secret.yaml
			web-app-pod.yaml

	// file
	k apply -f nginx-deployment.yaml

	// dir
	k apply -f app-stack/

	// all dirs
	k apply -f web-app -R

	// url
	k apply -f https://raw.githubusercontent.com/bmuschko/cka-study-guide/master/ch04/object-management/nginx-deployment.yaml

updating objects

	k create deployment nginx-ch4-3 --image=nginx:1.14.2 --port=80 --replicas=2

	k get all -o wide --show-labels

	k get pod -l app=nginx-ch4-3 -o wide
		NAME                           READY   STATUS    RESTARTS   AGE   IP            NODE       NOMINATED NODE   READINESS GATES
		nginx-ch4-3-7bd5d649b7-k962q   1/1     Running   0          22m   172.17.0.11   minikube   <none>           <none>
		nginx-ch4-3-7bd5d649b7-nnrp7   1/1     Running   0          22m   172.17.0.12   minikube   <none>           <none>

	k-busybox wget 172.17.0.11
	k-busybox wget 172.17.0.12

deleting objects

	k delete all -l app=nginx-ch4-3

	k delete all -l app=nginx-ch4-3 --grace-period=0 --force

object management using kustomize

	kustomization.yaml

	// mode 1
	k kustomize <target>

	// mode 2
	k apply -k <target>

composing manifests

	.
		kustomization.yaml
		web-app-deployment.yaml
		web-app-service.yaml

	// kustomization.yaml
	resources:
	- web-app-deployment.yaml
	- web-app-service.yaml

	// merge
	k kustomize ./ > web-app.yaml

generate manifest from other source

	// 이럴 거면 k apply -f ./ 하고 뭐 크게 다른가?
	k apply -k ./

adding common config across multiple manifests

	// kustomization.yaml
	namespace: persistence
	commonLabels:
	  team: helix
	resources:
	- web-app-deployment.yaml
	- web-app-service.yaml

	// test
	k create deployment nginx --image=nginx --port=80
	k expose deployment.apps/nginx --port=80 --type=NodePort
	k get all -l app=nginx
	curl minikube:30379
	k delete all -l app=nginx --force

	// nginx-deployment.yaml
	k create deployment nginx --image=nginx --port=80
	k create deployment nginx --image=nginx --port=80 --dry-run=client -o yaml > nginx-deployment.yaml
	k expose deployment.apps/nginx --port=80 --type=NodePort --dry-run=client -o yaml > nginx-service.yaml

Project: ch4-kust

    kustomization.yaml
        1: namespace: persistence
        2: commonLabels:
        3:   team: helix
        4: resources:
        5: - nginx-deployment.yaml
        6: - nginx-service.yaml

    nginx-deployment.yaml
        1: apiVersion: apps/v1
        2: kind: Deployment
        3: metadata:
        4:   creationTimestamp: null
        5:   labels:
        6:     app: nginx
        7:   name: nginx
        8: spec:
        9:   replicas: 1
       10:   selector:
       11:     matchLabels:
       12:       app: nginx
       13:   strategy: {}
       14:   template:
       15:     metadata:
       16:       creationTimestamp: null
       17:       labels:
       18:         app: nginx
       19:     spec:
       20:       containers:
       21:       - image: nginx
       22:         name: nginx
       23:         ports:
       24:         - containerPort: 80
       25:         resources: {}
       26: status: {}

    nginx-service.yaml
        1: apiVersion: v1
        2: kind: Service
        3: metadata:
        4:   creationTimestamp: null
        5:   labels:
        6:     app: nginx
        7:   name: nginx
        8: spec:
        9:   ports:
       10:   - port: 80
       11:     protocol: TCP
       12:     targetPort: 80
       13:   selector:
       14:     app: nginx
       15:   type: NodePort
       16: status:
       17:   loadBalancer: {}

	k kustomize ./
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: nginx
    team: helix					// added
  name: nginx
  namespace: persistence		// added
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
    team: helix
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: nginx
    team: helix					// added
  name: nginx
  namespace: persistence		// added
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
      team: helix				// added
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
        team: helix				// added
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80
        resources: {}
status: {}

	k delete all -l app=nginx --grace-period=0 --force

	k apply -f .		// error

	// method 1
	k create ns persistence
	k apply -k .		// ok
	k delete all -l app=nginx --grace-period=0 --force

	// method 2
	k kustomize . > nginx.yaml
	k apply -f nginx.yaml
	k delete -f nginx.yaml --force

cusotmization manifests

	// kustomization.yaml
	resources:
	- nginx-deployment.yaml
	patchesStrategicMerge:
	- secuirty-context.yaml

	// 굳이 필요한 기능은 아닌 것 같다.


common templating tools

using yq

	// select
	yq e '.metadata.name' pod.yaml

	yq e '.spec.containers[0].env[1].value' pod.yaml

	// editing in place
	yq e -i '.spec.containers[0].env[1].value = "1.6.0"' pod.yaml

merge yaml files
	yq eval-all 'select(fileIndex == 0 *+ select(fileIndex == 1)' pom.yaml sidecar.yaml

using helm

standard chart structure

	Chart.yaml
	templates/
		web-app-pod-template.yaml
		web-app-service-template.yaml
	values.yaml

	// Chart.yaml
	apiVersion: 1.0.0
	name: web-app
	version: 2.5.4

	// values.yaml
	db_host: mysql-service
	db_user: root
	db_password: password
	service_port: 3000

	// web-app-pod-template.yaml
	...
	env:
	- name: DB_HOST
	  value: {{ .Values.db_host }}

	helm template .
	// 치환되고, 합쳐진 yaml 파일 여기에.

	helm package .
	// web-app-2.5.4.tgz (chart file) is created here.
